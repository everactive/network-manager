name: network-manager
version: 1.2.2-23
summary: Network management framework
description: |
  NetworkManager is a system network service that manages your network
  devices and connections, attempting to keep active network connectivity
  when available. It manages ethernet, WiFi, mobile broadband (WWAN) and
  PPPoE devices, provides VPN integration with a variety of different
  VPN serivces.
  Please find the source code at https://code.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/network-manager
confinement: strict
grade: stable
base: core

slots:
  service:
    interface: network-manager

plugs:
  nmcli:
    interface: network-manager
  wpa:
    interface: dbus
    bus: system
    name: fi.w1.wpa_supplicant1

hooks:
  configure:
    plugs:
      # network is needed to avoid some denials when using snapctl
      - network
      - network-setup-observe

apps:
  nmcli:
    command: usr/bin/nmcli
    plugs: [nmcli]
  networkmanager:
    command: bin/networkmanager
    daemon: simple
    slots: [service]
    plugs: [modem-manager, ppp, network-setup-observe, wpa, firewall-control]

parts:
  hooks:
    plugin: dump
    source: hooks
    organize:
      configure: meta/hooks/configure

  networkmanager-common:
    plugin: dump
    source: snap-common

  changelog:
    plugin: nil
    override-build: |
      cp "$SNAPCRAFT_PROJECT_DIR"/ChangeLog "$SNAPCRAFT_PART_INSTALL"
    organize:
      ChangeLog: usr/share/doc/network-manager/ChangeLog

  inotify-tools:
    plugin: nil
    stage-packages:
      - libinotifytools0
      - inotify-tools
    filesets:
      wanted:
        - usr/share/doc/inotify-tools/copyright
        - usr/bin/inotifywait
        - usr/share/doc/libinotifytools0/copyright
        - usr/lib/libinotifytools.so.0.4.1
        - usr/lib/libinotifytools.so.0
    prime:
      - $wanted

  networkmanager:
    plugin: autotools

    source: https://git.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/network-manager
    source-type: git
    source-branch: network-manager/xenial/1.2.2

    build-packages:
      - intltool
      - gtk-doc-tools
      - libdbus-glib-1-dev
      - libdbus-1-dev
      - libiw-dev
      - libglib2.0-dev
      - libnl-3-dev
      - libnl-route-3-dev
      - libnl-genl-3-dev
      - libnss3-dev
      - libgnutls28-dev
      - libgcrypt11-dev
      - uuid-dev
      - systemd
      - libsystemd-dev
      - libudev-dev
      - libgudev-1.0-dev
      - libgirepository1.0-dev
      - gobject-introspection
      - libglib2.0-doc
      - libmm-glib-dev
      - libndp-dev
      - libreadline-dev
      - libnewt-dev
      - dbus-test-runner
      - isc-dhcp-client
      - python-dbus
      - python-gi
      - iptables
      - ppp-dev

    stage-packages:
      - iputils-arping
      - libdbus-glib-1-2
      - libgudev-1.0-0
      - libmm-glib0
      - libndp0
      - libnspr4
      - libnss3

    configflags:
      # Disable all features we don't want enabled as we're not
      # supporting them (yet).
      - --prefix=/usr
      - --libdir=/usr/lib
      - --libexecdir=/usr/lib/NetworkManager
      - --disable-qt
      - --disable-teamdctl
      - --disable-polkit
      - --disable-vala
      - --disable-config-plugin-ibft
      - --with-dhcpcd=no
      - --with-dhclient=no
      - --with-dnsmasq=no
      - --with-systemd-journal=no
      - --with-session-tracking=no
      # We only support suspend/resume tracking together with systemd/logind
      # at the moment.
      - --with-suspend-resume=systemd
      # Removes dependency on libicudata which weights 25M. Also libsoup
      # is only used to verify a domain in the DNS resolve process has a
      # valid format and to check if a valid internet connection is available.
      - --with-libsoup=no
      # We want to support ModemManager
      - --with-modem-manager-1=yes
      - --enable-tests=yes
      # Set explicitly CFLAGS until lp: #1791946 is solved
      - CFLAGS=-O2

    override-build: |
      snapcraftctl build
      # Run all tests NetworkManager ships by default
      make check
      # Strip binaries
      find ../install -executable -type f | xargs file -Ni |
          grep 'application/x-executable\|application/x-sharedlib' | cut -d: -f1 | xargs strip

    # Filter files to pull only the minimum needed
    filesets:
      binaries:
        - usr/bin/arping
        - usr/bin/nmcli
        - usr/lib/*/NetworkManager
        - usr/lib/pppd/2.4.5/nm-pppd-plugin.so
        - usr/lib/NetworkManager
        - usr/sbin/NetworkManager
        - usr/lib/*/libnm-*
      configs:
        - etc/NetworkManager/*
      docs:
        - usr/share/doc/*/copyright
      rdepends:
        - usr/lib/libnm*
        - usr/lib/*/libdbus-glib*
        - usr/lib/*/libgudev*
        - usr/lib/*/libmm-glib*
        - usr/lib/*/libndp*
        - usr/lib/*/libnspr4*
        - usr/lib/*/libnss3*
        - usr/lib/*/libnssutil3*
        - usr/lib/*/libplc4*
        - usr/lib/*/libplds4*
        - usr/lib/*/libsmime3*
        - usr/lib/*/libsqlite3*
        - usr/lib/*/nss/*
      unwanted:
        # We don't use dhclient so we don't need this helper
        - -usr/lib/NetworkManager/nm-dhcp-helper
        # Things we don't support yet and don't have to ship
        - -usr/lib/NetworkManager/libnm-device-plugin-adsl.so
        - -usr/lib/NetworkManager/libnm-device-plugin-bluetooth.so
        - -usr/lib/NetworkManager/libnm-settings-plugin-ibft.so
        # Some additional build artifacts we do not need
        - -usr/lib/pkgconfig/

    prime:
      - $binaries
      - $configs
      - $docs
      - $rdepends
      - $unwanted

