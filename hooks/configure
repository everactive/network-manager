#!/bin/sh -ex
# Configure hook has two missions:
# 1. Set properties defaults on installation, so users can see them
# 2. Re-start daemon if a property has changed

. "$SNAP"/bin/snap-prop.sh

props_file="$SNAP_DATA"/current_snap_props

_create_props_content() {
    printf "wifi_powersave=%s\n" "$(get_wifi_powersave)"
    printf "wifi_wake_on_wlan=%s\n" "$(get_wifi_wake_on_wlan)"
    printf "wifi_wake_on_password=%s\n" "$(get_wifi_wake_on_password)"
    printf "ethernet_enable=%s\n" "$(get_ethernet_enable)"
    printf "debug_enable=%s\n" "$(get_debug_enable)"
}

content=$(_create_props_content)

if [ ! -e "$props_file" ]; then
    # Installation or refresh from old snap. Assign defaults.
    snapctl set wifi.powersave="$(get_wifi_powersave)"
    snapctl set wifi.wake-on-wlan="$(get_wifi_wake_on_wlan)"
    snapctl set wifi.wake-on-wlan-password="$(get_wifi_wake_on_password)"
    snapctl set ethernet.enable="$(get_ethernet_enable)"
    snapctl set debug.enable="$(get_debug_enable)"
    echo "$content" > "$props_file"
    return 0
fi

old_content=$(cat "$props_file")
if [ "$content" = "$old_content" ]; then
    # No change in properties, this must be a snap refresh
    return 0
fi

# Some property changed, store new values and re-start daemon to apply changes
echo "$content" > "$props_file"
snapctl restart "$SNAP_NAME"
