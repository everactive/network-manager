summary: Verify WiFi WoWLAN can be enabled in NetworkManager globally via a snap config option

execute: |
    # Enable WoWLAN globally for all new WiFi connections
    snap set network-manager wifi.wake-on-wlan=any

    # Get us an AP via the wifi-ap we can use to create a connection to
    snap install wifi-ap
    # wifi-ap needs a bit of time to settle down
    while ! wifi-ap.status | grep "ap.active: true" ; do
        sleep .5
    done
    /snap/bin/wifi-ap.config set wifi.interface=wlan0
    /snap/bin/wifi-ap.config set wifi.ssid=Ubuntu
    /snap/bin/wifi-ap.config set wifi.security=open

    # NM some times still detects the wifi as WPA2 instead of open, so we need
    # to re-start to force it to refresh. See LP: #1704085. After that, we have
    # to wait to make sure thw AP sends the beacon frames so wpa_supplicant
    # detects the AP changes.
    sleep 30
    systemctl restart snap.network-manager.networkmanager.service
    while ! systemctl is-active snap.network-manager.networkmanager.service ; do
        sleep .5
    done
    # Restarting NM breaks wifi-ap (it logs "Failed to set beacon parameters").
    # Restarting wifi-ap fixes the issue. See LP: #1704096.
    wifi-ap.status restart-ap
    while ! wifi-ap.status | grep "ap.active: true" ; do
        sleep .5
    done

    # AP needs a bit to appear and be visible for NetworkManager
    /snap/bin/network-manager.nmcli d wifi rescan
    while ! /snap/bin/network-manager.nmcli d wifi | grep Ubuntu ; do
        /snap/bin/network-manager.nmcli d wifi rescan
        sleep 5
    done

    # Connect to the AP and ensure the connection was established
    /snap/bin/network-manager.nmcli d wifi | grep Ubuntu
    /snap/bin/network-manager.nmcli d wifi connect Ubuntu
    /snap/bin/network-manager.nmcli d | grep 'wlan1.*connected'

    # Now that we're connected a new connection exists which we can look at
    # to verify that the WoWLAN key is correctly set.
    /snap/bin/network-manager.nmcli c show Ubuntu | grep '802-11-wireless.wake-on-wlan:.*default (1)'

    if [ "$SPREAD_SYSTEM" = "hw-ubuntu-core-16" ]; then
        if ! iw phy phy0 info | grep -q "WoWLAN support:" ; then
            echo "INFO: Hardware does not support WoWLAN so we're not testing application"
            echo "      of the configuration option on the hardware."
            exit 0
        fi
        iw phy phy0 wowlan show | grep "WoWLAN is enabled"
        iw phy phy0 wowlan show | grep "wake up on special any trigger"
    fi
